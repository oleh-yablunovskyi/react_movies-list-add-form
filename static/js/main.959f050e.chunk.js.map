{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","isValidUrl","useState","Math","random","toString","slice","id","touched","setToched","hasError","htmlFor","classNames","type","placeholder","event","target","onBlur","url","test","NewMovie","onAdd","count","setCount","newTitle","setNewTitle","newDescription","setNewDescription","newImgUrl","setNewImgUrl","newImdbUrl","setNewImdbUrl","newImdbId","setNewImdbId","isValidImgUrl","isValidImdbUrl","handleFormSubmit","prevCount","onSubmit","preventDefault","disabled","Boolean","trim","App","moviesFromServer","setMovies","newMovie","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.959f050e.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  isValidUrl?: boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  isValidUrl = true,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setToched] = useState(false);\n\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {!isValidUrl && touched && (\n        <p className=\"help is-danger\">URL is invalid</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\nconst isValidUrl = (url: string) => {\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return pattern.test(url);\n};\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [newTitle, setNewTitle] = useState('');\n  const [newDescription, setNewDescription] = useState('');\n  const [newImgUrl, setNewImgUrl] = useState('');\n  const [newImdbUrl, setNewImdbUrl] = useState('');\n  const [newImdbId, setNewImdbId] = useState('');\n\n  const isValidImgUrl = isValidUrl(newImgUrl);\n  const isValidImdbUrl = isValidUrl(newImdbUrl);\n\n  const isSubmitButtonActive = () => (Boolean(\n    newTitle.trim()\n    && newImgUrl.trim()\n    && newImdbUrl.trim()\n    && newImdbId.trim(),\n  ));\n\n  const clearForm = () => {\n    setNewTitle('');\n    setNewDescription('');\n    setNewImgUrl('');\n    setNewImdbUrl('');\n    setNewImdbId('');\n  };\n\n  const handleFormSubmit = () => {\n    if (!isValidUrl(newImgUrl) || !isValidUrl(newImdbUrl)) {\n      return;\n    }\n\n    const newMovie = {\n      title: newTitle,\n      description: newDescription,\n      imgUrl: newImgUrl,\n      imdbUrl: newImdbUrl,\n      imdbId: newImdbId,\n    };\n\n    onAdd(newMovie);\n\n    setCount((prevCount => prevCount + 1));\n\n    clearForm();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={(event) => {\n        event.preventDefault();\n        handleFormSubmit();\n      }}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newTitle}\n        required\n        onChange={(value: string) => setNewTitle(value)}\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newDescription}\n        onChange={(value: string) => setNewDescription(value)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newImgUrl}\n        required\n        onChange={(value: string) => setNewImgUrl(value)}\n        isValidUrl={isValidImgUrl}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newImdbUrl}\n        required\n        onChange={(value: string) => setNewImdbUrl(value)}\n        isValidUrl={isValidImdbUrl}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newImdbId}\n        required\n        onChange={(value: string) => setNewImdbId(value)}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isSubmitButtonActive()}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies((prevMovies => (\n      [...prevMovies, newMovie]\n    )));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}